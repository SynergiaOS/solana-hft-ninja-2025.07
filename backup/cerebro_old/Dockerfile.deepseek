# ðŸ§® DeepSeek-Math Dockerfile - Cost-Effective AI for Small Portfolios
# Optimized for <$1 operational cost with 4-bit quantization and LoRA

FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    git \
    curl \
    wget \
    build-essential \
    cmake \
    ninja-build \
    libssl-dev \
    libffi-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libffi-dev \
    liblzma-dev \
    && rm -rf /var/lib/apt/lists/*

# Create symlink for python
RUN ln -s /usr/bin/python3.10 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip setuptools wheel

# Install PyTorch with CUDA support (optimized for memory)
RUN pip install torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 --index-url https://download.pytorch.org/whl/cu121

# Install core ML dependencies
RUN pip install \
    transformers==4.36.0 \
    accelerate==0.25.0 \
    bitsandbytes==0.41.3 \
    peft==0.7.1 \
    datasets==2.15.0 \
    tokenizers==0.15.0

# Install vLLM for fast inference
RUN pip install vllm==0.2.5

# Install LMCache for caching
RUN pip install lmcache

# Install additional dependencies
RUN pip install \
    numpy==1.24.3 \
    scipy==1.11.4 \
    scikit-learn==1.3.2 \
    pandas==2.1.4 \
    fastapi==0.104.1 \
    uvicorn==0.24.0 \
    pydantic==2.5.0 \
    aiofiles==23.2.1 \
    python-multipart==0.0.6 \
    httpx==0.25.2 \
    redis==5.0.1 \
    psutil==5.9.6 \
    GPUtil==1.4.0

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install -r requirements.txt

# Copy application code
COPY . .

# Create directories for models and cache
RUN mkdir -p /app/models /app/cache /app/logs

# Set permissions
RUN chmod +x /app/scripts/*.sh 2>/dev/null || true

# Create non-root user for security
RUN useradd -m -u 1000 deepseek && \
    chown -R deepseek:deepseek /app
USER deepseek

# Expose port for API
EXPOSE 8003

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8003/health || exit 1

# Environment variables for model configuration
ENV MODEL_NAME=deepseek-ai/deepseek-math-7b-instruct
ENV USE_QUANTIZATION=true
ENV USE_LMCACHE=true
ENV CACHE_SIZE_MB=1024
ENV MAX_TOKENS=512
ENV TEMPERATURE=0.1
ENV API_PORT=8003

# Start command
CMD ["python", "-m", "uvicorn", "ai.deepseek_api:app", "--host", "0.0.0.0", "--port", "8003", "--workers", "1"]
