[package]
name = "cerebro"
version = "1.0.0"
edition = "2021"
authors = ["Solana HFT Ninja Team"]
description = "ðŸ§  Cerebro - Enterprise AI Engine for Solana HFT Ninja"
license = "MIT"
repository = "https://github.com/SynergiaOS/solana-hft-ninja-2025.07"

[[bin]]
name = "cerebro-orchestrator"
path = "orchestrator/src/main.rs"

[dependencies]
# Core async runtime
tokio = { version = "1.35", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
base64 = "0.21"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Redis/DragonflyDB client
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# HTTP client and server
reqwest = { version = "0.11", features = ["json"] }
warp = "0.3"

# Command line interface
clap = { version = "4.4", features = ["derive"] }

# UUID generation
uuid = { version = "1.6", features = ["v4"] }

# Random number generation
rand = "0.8"

# Time utilities
chrono = { version = "0.4", features = ["serde"] }

# Parallel processing
rayon = "1.8"
num_cpus = "1.16"

# Removed Arrow due to version conflicts - using bincode instead

# Performance monitoring
prometheus = "0.13"
hdrhistogram = "7.5"

# Benchmarking
criterion = { version = "0.5", features = ["html_reports"] }

# Memory profiling
dhat = "0.3"

# Testing utilities
mockall = "0.12"

[dev-dependencies]
# Additional testing dependencies
tokio-test = "0.4"
tempfile = "3.8"
wiremock = "0.5"

[features]
default = ["batch-processing", "caching", "model-switching", "feature-extraction"]

# Feature flags for different components
batch-processing = []
caching = []
model-switching = []
feature-extraction = []
chaos-testing = []

# Performance optimizations
simd = []
gpu-acceleration = []

[profile.release]
# Optimized release profile for production
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.bench]
# Optimized profile for benchmarking
opt-level = 3
debug = true
lto = true

[profile.dev]
# Development profile with debugging
opt-level = 0
debug = true
overflow-checks = true

# Workspace configuration for multi-crate project
[workspace]
members = [
    "batch_processor",
    "prompt_engine", 
    "model_router",
    "cache_engine",
    "feature_engine",
    "orchestrator"
]

# Shared dependencies across workspace
[workspace.dependencies]
tokio = { version = "1.35", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
anyhow = "1.0"
tracing = "0.1"

# Patch dependencies for performance
[patch.crates-io]
# Use faster JSON parser
serde_json = { git = "https://github.com/serde-rs/json", branch = "master" }

# Build configuration moved to .cargo/config.toml

# Documentation configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Cargo configuration for faster builds
[package.metadata.cargo-udeps.ignore]
normal = ["criterion"]  # Ignore criterion in dependency checks

# Benchmark configuration
[[bench]]
name = "batch_processing"
harness = false
path = "benches/batch_processing.rs"

[[bench]]
name = "cache_performance"
harness = false
path = "benches/cache_performance.rs"

[[bench]]
name = "feature_extraction"
harness = false
path = "benches/feature_extraction.rs"

# Example binaries
[[example]]
name = "batch_demo"
path = "examples/batch_demo.rs"

[[example]]
name = "cache_demo"
path = "examples/cache_demo.rs"

[[example]]
name = "model_switching_demo"
path = "examples/model_switching_demo.rs"

# Integration test configuration
[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"

[[test]]
name = "performance_tests"
path = "tests/performance/microbenchmarks.rs"

[[test]]
name = "chaos_tests"
path = "tests/chaos/chaos_testing.rs"
