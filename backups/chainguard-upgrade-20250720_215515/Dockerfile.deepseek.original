# 🛡️ CHAINGUARD HARDENED DeepSeek-Math - Enterprise Security + Cost-Effective AI
# Optimized for <$1 operational cost with 4-bit quantization and LoRA
# Now with zero-vulnerability base image

FROM cgr.dev/chainguard/python:latest-dev as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512

# Chainguard Python images come with Python 3.11+ and essential build tools
# No manual apt-get needed - security hardened by default
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies in builder stage
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Install all dependencies in one layer for efficiency
RUN pip install --no-cache-dir \
    torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 \
    --index-url https://download.pytorch.org/whl/cu121 && \
    pip install --no-cache-dir \
    transformers==4.36.0 \
    accelerate==0.25.0 \
    bitsandbytes==0.41.3 \
    peft==0.7.1 \
    datasets==2.15.0 \
    tokenizers==0.15.0 \
    vllm==0.2.5 \
    lmcache \
    numpy==1.24.3 \
    scipy==1.11.4 \
    scikit-learn==1.3.2 \
    pandas==2.1.4 \
    fastapi==0.104.1 \
    uvicorn==0.24.0 \
    pydantic==2.5.0 \
    aiofiles==23.2.1 \
    python-multipart==0.0.6 \
    httpx==0.25.2 \
    redis==5.0.1 \
    psutil==5.9.6 \
    GPUtil==1.4.0 && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# 🚀 PRODUCTION STAGE - CHAINGUARD PYTHON RUNTIME
FROM cgr.dev/chainguard/python:latest

WORKDIR /app

# Copy installed packages and application from builder
COPY --from=builder /home/nonroot/.local/lib/python3.11/site-packages /home/nonroot/.local/lib/python3.11/site-packages
COPY --from=builder /app .

# Create directories for models and cache
RUN mkdir -p /app/models /app/cache /app/logs && \
    chown -R nonroot:nonroot /app

# Use built-in non-root user from Chainguard
USER nonroot:nonroot

# Expose port for API
EXPOSE 8003

# Note: Health checks handled by Kubernetes/orchestrator in production

# Environment variables for model configuration
ENV MODEL_NAME=deepseek-ai/deepseek-math-7b-instruct
ENV USE_QUANTIZATION=true
ENV USE_LMCACHE=true
ENV CACHE_SIZE_MB=1024
ENV MAX_TOKENS=512
ENV TEMPERATURE=0.1
ENV API_PORT=8003

# Start command
CMD ["python", "-m", "uvicorn", "ai.deepseek_api:app", "--host", "0.0.0.0", "--port", "8003", "--workers", "1"]
