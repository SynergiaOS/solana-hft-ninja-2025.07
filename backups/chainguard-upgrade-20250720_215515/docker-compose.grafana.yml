# ü•∑ Solana HFT Ninja 2025.07 - Grafana Docker Compose Configuration
# Kompletna konfiguracja Grafana z dashboardami i datasources

version: '3.8'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: hft-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Podstawowa konfiguracja
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=hft-ninja-2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      
      # Konfiguracja dla HFT
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/hft-ninja-comprehensive.json
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
      
      # Optymalizacje wydajno≈õci
      - GF_DATABASE_MAX_OPEN_CONN=300
      - GF_DATABASE_MAX_IDLE_CONN=300
      - GF_DATAPROXY_TIMEOUT=60
      - GF_DATAPROXY_DIAL_TIMEOUT=30
      - GF_DATAPROXY_KEEP_ALIVE_SECONDS=30
      
      # Bezpiecze≈Ñstwo
      - GF_SECURITY_COOKIE_SECURE=false
      - GF_SECURITY_COOKIE_SAMESITE=lax
      - GF_AUTH_ANONYMOUS_ENABLED=false
      
      # Alerting
      - GF_ALERTING_ENABLED=true
      - GF_UNIFIED_ALERTING_ENABLED=true
      
      # Logging
      - GF_LOG_LEVEL=info
      - GF_LOG_MODE=console,file
      
    volumes:
      # Dashboards
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      
      # Datasources
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      
      # Persistent data
      - grafana-data:/var/lib/grafana
      
      # Custom configuration
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      
    networks:
      - hft-monitoring
    
    depends_on:
      - prometheus
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.hft-ninja.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: hft-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      # Optymalizacje dla HFT metryk
      - '--query.max-samples=50000000'
      - '--query.timeout=60s'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-data:/prometheus
    networks:
      - hft-monitoring
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter dla metryk systemowych
  node-exporter:
    image: prom/node-exporter:latest
    container_name: hft-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - hft-monitoring

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  hft-monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
